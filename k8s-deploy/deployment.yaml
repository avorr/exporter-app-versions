---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
  namespace: slurm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: exporter-apps-versions
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: exporter-apps-versions
    spec:
      containers:
        - name: exporter-apps-versions
          image: base.sw.sbc.space/pid/pid_registry/exporter-apps-versions/exporter-apps-versions:0.0.9
          ports:
            - containerPort: 5002
          env:
            # Define the environment variable
            - name: PORTAL_URL_PD15
              valueFrom:
                configMapKeyRef:
                  # The ConfigMap containing the value you want to assign to SPECIAL_LEVEL_KEY
                  name: my-configmap
                  # Specify the key associated with the value
                  key: PORTAL_URL_PD15
            - name: OS_METRICS_PD15
              valueFrom:
                configMapKeyRef:
                  # The ConfigMap containing the value you want to assign to SPECIAL_LEVEL_KEY
                  name: my-configmap
                  # Specify the key associated with the value
                  key: OS_METRICS_PD15
            - name: SSH_LOGIN
              valueFrom:
                secretKeyRef:
                  name: ansible-pid
                  key: login
            - name: SSH_PASS
              valueFrom:
                secretKeyRef:
                  name: ansible-pid
                  key: password
            - name: PORTAL_TOKEN_PD15
              valueFrom:
                secretKeyRef:
                  name: portal-token-pd15
                  key: token


#          readinessProbe:
#            failureThreshold: 3
#            httpGet:
#              path: /versions-pd15
#              port: 5002
#            periodSeconds: 10
#            successThreshold: 1
#            timeoutSeconds: 1
#          livenessProbe:
#            failureThreshold: 3
#            httpGet:
#              path: /versions-pd15
#              port: 5002
#            periodSeconds: 10
#            successThreshold: 1
#            timeoutSeconds: 1
#            initialDelaySeconds: 10


#          resources:
#            requests:
#              cpu: 500m
#              memory: 1000Mi
#            limits:
#              cpu: 1000m
#              memory: 1000Mi

#          volumeMounts:
#            - name: config
#              mountPath: /etc/nginx/conf.d/
      volumes:
        - name: config
          configMap:
            name: my-configmap
      imagePullSecrets:
        - name: regcred

---
apiVersion: v1
kind: Service
metadata:
  name: exporter-apps-versions-service
  namespace: slurm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 5002
  selector:
    app: exporter-apps-versions

---
apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: exporter-apps-versions-ingress
  namespace: slurm
spec:
  defaultBackend:
    service:
      name: my-service
      port:
        number: 8080
  rules:
  - host: avorrtest.ru
    http:
      paths:
      - pathType: ImplementationSpecific
        backend:
          service:
            name: exporter-apps-versions-service
            port:
              number: 8080
...